{"version":3,"sources":["components/UsersList.js","components/UsersModalForm.js","components/TodoList.js","components/TodoModalForm.js","components/Menubar.js","App.js","serviceWorker.js","index.js"],"names":["UsersList","props","onDelete","key","datasource","state","setState","filter","item","name","columns","title","dataIndex","render","text","record","Group","type","ghost","style","border","borderRightStyle","onConfirm","this","dataSource","marginLeft","React","Component","UsersModalForm","loading","visible","showModal","handleOk","setTimeout","handleCancel","onClick","float","onOk","onCancel","footer","placeholder","TodoList","action","date","TodoModalForm","handleDate","startDate","Date","color","selected","Header","Layout","Content","Menubar","handleClick","e","console","log","current","selectedKeys","mode","Item","to","margin","padding","background","minHeight","exact","path","component","App","className","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1a1f3179.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Table, Popconfirm, Button } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nclass UsersList extends React.Component {\r\n\r\n  onDelete = (key) => {\r\n    const datasource = [...this.state.datasource];\r\n    this.setState({ datasource: datasource.filter(item => item.key !== key) });\r\n  }\r\n\r\n  constructor(props){\r\n    super(props);\r\n        this.state = {\r\n          datasource : [\r\n            {\r\n                key : 1,\r\n                name : \"Hari\"\r\n            },{\r\n                key : 2,\r\n                name : \"Krishna\"\r\n            }]\r\n          };\r\n\r\n        this.columns = [\r\n          {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n          },\r\n          {\r\n            title: 'Actions',\r\n            render: (text, record) => {\r\n              return (\r\n                <div>\r\n                    <Button.Group>\r\n                        <Button type = \"primary\" ghost style={{border : \"none\", borderRightStyle:\"inset\"}}>Edit</Button>\r\n                        <Popconfirm title=\"Delete?\" onConfirm={() => this.onDelete(record.key)}>\r\n                        <Button type = \"primary\" ghost style={{border : \"none\"}}>Delete</Button>\r\n                        </Popconfirm>\r\n                    </Button.Group>\r\n                </div>\r\n              );\r\n            },\r\n          }\r\n        ];\r\n    }\r\n\r\n    render(){\r\n      const { datasource } = this.state;\r\n      const columns = this.columns;\r\n      return (\r\n        <div>\r\n            <Table dataSource={datasource} columns={columns} style={{marginLeft : \"10px\"}} />;\r\n        </div>\r\n        )\r\n    }\r\n\r\n  }\r\n\r\nexport default UsersList;","import React from 'react';\r\nimport { Modal, Input, Button } from 'antd';\r\n\r\nclass UsersModalForm extends React.Component {\r\n  state = {\r\n    loading: false,\r\n    visible: false,\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false, visible: false });\r\n    }, 3000);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  render() {\r\n    const { visible, loading } = this.state;\r\n    return (\r\n      <div>\r\n\r\n        <Button type=\"default\" onClick={this.showModal} style={{float:\"left\"}}>\r\n          Create User\r\n        </Button>\r\n        <Modal\r\n          visible={visible}\r\n          title=\"Add New User\"\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" loading={loading} onClick={this.handleOk}>\r\n              Save\r\n            </Button>\r\n          ]}\r\n        >\r\n        <label>Username</label>\r\n        <Input placeholder=\"Username\" /><br/><br/>\r\n        <label>Email</label>\r\n        <Input placeholder=\"email\" />\r\n       </Modal>\r\n       {/* <ProductList/> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default UsersModalForm;","import React from 'react';\r\nimport { Table, Popconfirm, Button } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nclass TodoList extends React.Component {\r\n\r\n    onDelete = (key) => {\r\n        const datasource = [...this.state.datasource];\r\n        this.setState({ datasource: datasource.filter(item => item.key !== key) });\r\n    }\r\n      \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            datasource : [\r\n                {\r\n                    key : 1,\r\n                    action : \"Yoga\",\r\n                    date : \"today\"\r\n                },{\r\n                    key : 2,\r\n                    action : \"Study\",\r\n                    date : \"today\"\r\n                },{\r\n                    key : 3,\r\n                    action : \"Sleep\",\r\n                    date : \"today\"\r\n                }]\r\n        };\r\n\r\n        \r\n    this.columns = [\r\n        {\r\n          title: 'Action',\r\n          dataIndex: 'action',\r\n        },\r\n        {\r\n          title: 'Date',\r\n          dataIndex: 'date',\r\n        },\r\n        {\r\n          title: 'Operations',\r\n          render: (text, record) => {\r\n            return (\r\n              <div>\r\n                  <Button.Group>\r\n                      <Button type = \"primary\" ghost style={{border : \"none\", borderRightStyle:\"inset\"}}>Edit</Button>\r\n                      <Popconfirm title=\"Delete?\" onConfirm={() => this.onDelete(record.key)}>\r\n                      <Button type = \"primary\" ghost style={{border : \"none\"}}>Delete</Button>\r\n                      </Popconfirm>\r\n                  </Button.Group>\r\n              </div>\r\n            );\r\n          },\r\n        }\r\n      ];\r\n    }\r\n\r\n    render(){\r\n        const { datasource } = this.state;\r\n        const columns = this.columns;\r\n        return (\r\n          <div>\r\n              <Table dataSource={datasource} columns={columns} style={{marginLeft : \"10px\"}} />;\r\n          </div>\r\n          )\r\n      }\r\n\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport { Modal, Input, Button } from 'antd';\r\nimport Datepicker from 'react-date-picker';\r\nimport 'antd/dist/antd.css';\r\n\r\nclass TodoModalForm extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            loading: false,\r\n            visible: false,\r\n            startDate: new Date()\r\n          };\r\n    }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false, visible: false });\r\n    }, 3000);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  handleDate = date => {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { visible, loading } = this.state;\r\n    return (\r\n      <div>\r\n\r\n        <Button type=\"primary\" onClick={this.showModal} style={{float:'left'}}>\r\n          Add Todo\r\n        </Button>\r\n        <Modal\r\n          visible={visible}\r\n          title=\"Add New Todo\"\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" loading={loading} onClick={this.handleOk}>\r\n              Save\r\n            </Button>\r\n          ]}\r\n        >\r\n        <label>Action</label>\r\n        <Input placeholder=\"Action\" /><br/><br/>\r\n        <label><span style={{color : \"red\"}}>*</span>Date Added</label><br/>\r\n        <Datepicker        \r\n        selected={this.state.startDate}\r\n        onClick={this.handleDate}/>\r\n       </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoModalForm;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport { Menu, Layout } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport UsersList from './UsersList';\r\nimport UsersModalForm from './UsersModalForm';\r\nimport TodoList from './TodoList';\r\nimport TodoModalForm from './TodoModalForm';\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nclass Menubar extends React.Component {\r\n\r\nconstructor(){\r\n    super();\r\n    this.state = {\r\n        current: 'users',\r\n    }\r\n}\r\n\r\n  handleClick = (e) => {\r\n    console.log('click ', e);\r\n    this.setState({\r\n      current: e.key\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n        <Router>\r\n            <Menu\r\n                onClick={this.handleClick}\r\n                selectedKeys={[this.state.current]}\r\n                mode=\"horizontal\"\r\n            >\r\n                <Menu.Item key=\"todos\">   \r\n                    <Link to=\"/todos\">Todos</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"users\">\r\n                    <Link to=\"/users\">Users</Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n\r\n            <Layout>\r\n                    <Header  style={{ margin: '10px', padding: '15px', background: '#fff', minHeight: 20 }}>\r\n                        <Route exact path=\"/users\" component={UsersModalForm} />\r\n                        <Route path=\"/todos\" component={TodoModalForm} />\r\n                    </Header>\r\n                    <Content  style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n                        <Route exact path=\"/users\" component={UsersList} />\r\n                        <Route path=\"/todos\" component={TodoList} />\r\n                    </Content>\r\n            </Layout>\r\n        </Router>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menubar;","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport Menubar from './components/Menubar'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Menubar/><br/><br/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}